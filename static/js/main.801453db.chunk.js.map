{"version":3,"sources":["services/api.js","components/Container/index.js","pages/Main/styles.js","pages/Main/index.js","pages/Repository/styles.js","pages/Repository/index.js","routes.js","styles/global.js","App.js","index.js"],"names":["api","axios","create","baseURL","Container","styled","div","Form","form","rotate","keyframes","SubmitButton","button","attrs","props","type","disabled","loading","css","List","ul","Main","useState","newRepo","setNewRepo","repositories","setRepositories","setLoading","evt","a","preventDefault","get","response","data","name","full_name","useEffect","localRepositories","localStorage","getItem","JSON","parse","setItem","stringify","onSubmit","placeholder","value","onChange","target","color","size","map","repository","key","to","encodeURIComponent","Loading","Owner","header","IssueList","Repository","match","setRepository","issues","setIssues","repoName","decodeURIComponent","params","Promise","all","state","per_page","repoDetails","issuesData","src","owner","avatar_url","alt","login","description","issue","String","id","user","href","html_url","title","labels","label","Routes","path","exact","component","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.801453db.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com',\n});\n\nexport default api;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  max-width: 700px;\n  background-color: #fff;\n  border-radius: 4px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n  padding: 30px;\n  margin: 80px auto;\n\n  h1 {\n    font-size: 20px;\n    display: flex;\n    align-items: center;\n    flex-direction: row;\n  }\n\n  svg {\n    margin-right: 10px;\n  }\n`;\n\nexport default Container;\n","import styled, { keyframes, css } from 'styled-components';\n\nexport const Form = styled.form`\n  margin-top: 30px;\n  display: flex;\n  flex-direction: row;\n\n  input {\n    flex: 1;\n    border: 1px solid #eee;\n    padding: 10px 15px;\n    border-radius: 4px;\n    font-size: 16px;\n  }\n`;\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg)\n  }\n\n  to {\n    transform: rotate(360deg)\n  }\n`;\n\nexport const SubmitButton = styled.button.attrs(props => ({\n  type: 'submit',\n  disabled: props.loading,\n}))`\n  background-color: #2b7489;\n  border: none;\n  padding: 0 15px;\n  margin-left: 10px;\n  border-radius: 4px;\n\n  svg {\n    margin: 0 auto;\n  }\n\n  &[disabled] {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n\n  ${props =>\n    props.loading &&\n    css`\n      svg {\n        animation: ${rotate} 2s linear infinite;\n      }\n    `}\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  margin-top: 30px;\n\n  li {\n    padding: 15px 0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    & + li {\n      border-top: 1px solid #eee;\n    }\n\n    a {\n      color: #2b7489;\n      text-decoration: none;\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FaGithub, FaPlus, FaSpinner } from 'react-icons/fa';\n\nimport api from '../../services/api';\n\nimport Container from '../../components/Container';\nimport { Form, SubmitButton, List } from './styles';\n\nexport default function Main() {\n  const [newRepo, setNewRepo] = useState('');\n  const [repositories, setRepositories] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // componentDidMount\n  useEffect(() => {\n    const localRepositories = localStorage.getItem('repositories');\n\n    if (localRepositories) {\n      setRepositories(JSON.parse(localRepositories));\n    }\n  }, []);\n\n  // componentDidUpdate\n  useEffect(() => {\n    localStorage.setItem('repositories', JSON.stringify(repositories));\n  }, [repositories]);\n\n  function handleInputChange(evt) {\n    setNewRepo(evt.target.value);\n  }\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n\n    setLoading(true);\n\n    if (newRepo === '') {\n      setNewRepo('');\n      setLoading(false);\n    }\n\n    const response = await api.get(`/repos/${newRepo}`);\n\n    const data = {\n      name: response.data.full_name,\n    };\n\n    setRepositories([...repositories, data]);\n    setNewRepo('');\n    setLoading(false);\n  }\n\n  return (\n    <Container>\n      <h1>\n        <FaGithub />\n        Repositories\n      </h1>\n\n      <Form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Add a repository\"\n          value={newRepo}\n          onChange={handleInputChange}\n        />\n        <SubmitButton loading={loading}>\n          {loading ? (\n            <FaSpinner color=\"#fff\" size={14} />\n          ) : (\n            <FaPlus color=\"#fff\" size={14} />\n          )}\n        </SubmitButton>\n      </Form>\n\n      <List>\n        {repositories.map(repository => (\n          <li key={repository.name}>\n            <span>{repository.name}</span>\n            <Link to={`/repository/${encodeURIComponent(repository.name)}`}>\n              Detalhes\n            </Link>\n          </li>\n        ))}\n      </List>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Loading = styled.div`\n  color: #fff;\n  font-size: 30px;\n  font-weight: bold;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nexport const Owner = styled.header`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  a {\n    color: #2b7489;\n    font-size: 16px;\n    text-decoration: none;\n  }\n\n  img {\n    width: 120px;\n    border-radius: 50%;\n    margin-top: 20px;\n  }\n\n  h1 {\n    font-size: 24px;\n    margin-top: 10px;\n  }\n\n  p {\n    margin-top: 5px;\n    font-size: 14px;\n    color: #666;\n    line-height: 1.4;\n    text-align: center;\n    max-width: 400px;\n  }\n`;\n\nexport const IssueList = styled.ul`\n  padding-top: 30px;\n  margin-top: 30px;\n  border-top: 1px solid #eee;\n\n  li {\n    display: flex;\n    padding: 15px 10px;\n    border: 1px solid #eee;\n    border-radius: 4px;\n\n    & + li {\n      margin-top: 10px;\n    }\n\n    img {\n      width: 36px;\n      height: 36px;\n      border: 2px solid #eee;\n      border-radius: 50%;\n    }\n\n    div {\n      flex: 1;\n      margin-left: 15px;\n\n      strong {\n        font-size: 16px;\n\n        a {\n          text-decoration: none;\n          color: #333;\n\n          &:hover {\n            color: #278;\n          }\n        }\n\n        span {\n          background-color: #eee;\n          color: #333;\n          font-size: 12px;\n          font-weight: 600;\n          height: 20px;\n          padding: 3px 4px;\n          margin-left: 10px;\n        }\n      }\n\n      p {\n        margin-top: 5px;\n        font-size: 12px;\n        color: #999;\n      }\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport api from '../../services/api';\n\nimport Container from '../../components/Container';\nimport { Loading, Owner, IssueList } from './styles';\n\nexport default function Repository({ match }) {\n  const [repository, setRepository] = useState({});\n  const [issues, setIssues] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(async () => {\n    const repoName = decodeURIComponent(match.params.repository);\n\n    const [repoDetails, issuesData] = await Promise.all([\n      api.get(`/repos/${repoName}`),\n      api.get(`/repos/${repoName}/issues`, {\n        params: {\n          state: 'open',\n          per_page: 5,\n        },\n      }),\n    ]);\n\n    setRepository(repoDetails.data);\n    setIssues(issuesData.data);\n    setLoading(false);\n  }, [match.params.repository]);\n\n  if (loading) {\n    return <Loading>Loading...</Loading>;\n  }\n\n  return (\n    <Container>\n      <Owner>\n        <Link to=\"/\">Back to the repositories</Link>\n        <img src={repository.owner.avatar_url} alt={repository.owner.login} />\n        <h1>{repository.name}</h1>\n        <p>{repository.description}</p>\n      </Owner>\n\n      <IssueList>\n        {issues.map(issue => (\n          <li key={String(issue.id)}>\n            <img src={issue.user.avatar_url} alt={issue.user.login} />\n            <div>\n              <strong>\n                <a href={issue.html_url}>{issue.title}</a>\n                {issue.labels.map(label => (\n                  <span key={String(label.id)}>{label.name}</span>\n                ))}\n              </strong>\n              <p>{issue.user.login}</p>\n            </div>\n          </li>\n        ))}\n      </IssueList>\n    </Container>\n  );\n}\n\nRepository.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      repository: PropTypes.string,\n    }),\n  }).isRequired,\n};\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Main from './pages/Main';\nimport Repository from './pages/Repository';\n\nexport default function Routes() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Main} />\n        <Route path=\"/repository/:repository\" component={Repository} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n\n  html, body, #root {\n    min-height: 100%;\n  }\n\n  body {\n    background-color: #2b7489;\n    -webkit-font-smoothing: antialiased !important;\n  }\n\n  body, input, button {\n    color: #222;\n    font-size: 14px;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\n\nimport Routes from './routes';\nimport GlobalStyles from './styles/global';\n\nfunction App() {\n  return (\n    <>\n      <Routes />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}